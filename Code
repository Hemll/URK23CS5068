import javax.swing.*;
import java.awt.*;
import java.sql.*;

public class ShoppingCartGUI extends JFrame {

    String[] items = {
        "Laptop", "Smartphone", "Headphones", "Keyboard", "Mouse",
        "Smartwatch", "Monitor", "Charger", "USB Cable", "Backpack"
    };

    JCheckBox[] checkBoxes = new JCheckBox[items.length];
    JSpinner[] quantitySpinners = new JSpinner[items.length];
    JTextField nameField = new JTextField(20);

    static final String DB_URL = "jdbc:mysql://localhost:3306/shoppingdb";
    static final String USER = "root";
    static final String PASS = "yourpassword"; // replace with your MySQL password

    public ShoppingCartGUI() {
        setTitle("Gadget Zone: Online Store üõçÔ∏è");
        setSize(500, 500);
        setLayout(new BorderLayout());

        JLabel titleLabel = new JLabel("Welcome to Gadget Zone - Select Your Products");
        titleLabel.setFont(new Font("Arial", Font.BOLD, 18));
        titleLabel.setHorizontalAlignment(SwingConstants.CENTER);
        add(titleLabel, BorderLayout.NORTH);

        JPanel topPanel = new JPanel();
        topPanel.add(new JLabel("Enter your name:"));
        topPanel.add(nameField);
        add(topPanel, BorderLayout.BEFORE_FIRST_LINE);

        JPanel centerPanel = new JPanel(new GridLayout(items.length, 1));
        for (int i = 0; i < items.length; i++) {
            JPanel itemPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
            checkBoxes[i] = new JCheckBox(items[i]);
            quantitySpinners[i] = new JSpinner(new SpinnerNumberModel(1, 1, 100, 1));
            itemPanel.add(checkBoxes[i]);
            itemPanel.add(new JLabel("Qty:"));
            itemPanel.add(quantitySpinners[i]);
            centerPanel.add(itemPanel);
        }
        add(centerPanel, BorderLayout.CENTER);

        JButton submitBtn = new JButton("Submit Order");
        submitBtn.addActionListener(e -> saveToDatabase());
        add(submitBtn, BorderLayout.SOUTH);

        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setVisible(true);
    }

    void saveToDatabase() {
        String name = nameField.getText().trim();
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please enter your name.");
            return;
        }

        StringBuilder selectedItems = new StringBuilder();
        for (int i = 0; i < items.length; i++) {
            if (checkBoxes[i].isSelected()) {
                int qty = (Integer) quantitySpinners[i].getValue();
                selectedItems.append(items[i]).append(" x").append(qty).append(", ");
            }
        }

        if (selectedItems.length() == 0) {
            JOptionPane.showMessageDialog(this, "No items selected.");
            return;
        }

        String itemList = selectedItems.substring(0, selectedItems.length() - 2);

        try (Connection conn = DriverManager.getConnection(DB_URL, USER, PASS)) {
            String sql = "INSERT INTO orders (customer_name, items) VALUES (?, ?)";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, name);
            stmt.setString(2, itemList);
            stmt.executeUpdate();

            JOptionPane.showMessageDialog(this, "Order submitted successfully!");
            nameField.setText("");
            for (int i = 0; i < items.length; i++) {
                checkBoxes[i].setSelected(false);
                quantitySpinners[i].setValue(1);
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage());
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(ShoppingCartGUI::new);
    }
}
